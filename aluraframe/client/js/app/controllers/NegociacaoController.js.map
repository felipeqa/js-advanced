{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","_ordemAtual","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","negociacao","adiciona","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n\n    constructor() {\n        this._ordemAtual = '';\n\n        const $ = document.querySelector.bind(document);\n\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($('#negociacoesView')),\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\n\n        this._mensagem = new Bind(\n            new Mensagem,\n            new MensagemView($('#mensagemView')),\n            'texto');\n\n        this._service = new NegociacaoService();\n            \n        this._init();\n    }\n\n    _init() {\n       this._service\n            .lista()\n            .then(negociacoes => negociacoes.forEach((negociacao) => this._listaNegociacoes.adiciona(negociacao)))\n            .catch(erro => this._mensagem.texto = erro);\n\n        setInterval(() => {\n            this.importaNegociacoes();\n        },5000);\n    };\n\n    adiciona(event) {\n\n        event.preventDefault();\n\n        const negociacao = this._criaNegociacao();\n        \n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            })\n            .catch(mensagem => this._mensagem.texto = mensagem);\n    }\n\n    importaNegociacoes() {\n\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                    this._listaNegociacoes.adiciona(negociacao);\n                    this._mensagem.texto = 'Negociaçoes do periodo importadas!';\n            })).catch(erro => this._mensagem.texto = erro);\n\n        /*\n\n        usando promisse separadas\n\n        service.obterNegociacoesDaSemana()\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                this._mensagem.texto = 'Negociações adicionadas com sucesso';\n            }).catch(erro => this._mensagem.texto = erro);\n\n        service.obterNegociacoesDaSemanaAnterior()\n             .then(negociacoes => {\n                 negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                 this._mensagem.texto = 'Negociações adicionadas com sucesso';\n             }).catch(erro => this._mensagem.texto = erro);\n\n             console.log(\"AQUI\");\n             \n\n        service.obterNegociacoesDaSemanaRetrasada()\n              .then(negociacoes => {\n                  negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                  this._mensagem.texto = 'Negociações adicionadas com sucesso';\n              }).catch(erro => this._mensagem.texto = erro);\n        \n        * /\n\n        /*\n        codigo anterior callback hell\n\n        service.obterNegociacoesDaSemana((erro, negociacoes) => {\n            if(erro){\n                this._mensagem.texto = erro;\n                return;\n            }\n\n            negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n            \n            service.obterNegociacoesDaSemanaAnterior((erro, negociacoes) => {\n                if(erro){\n                    this._mensagem.texto = erro;\n                    return;\n                }\n    \n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                \n                service.obterNegociacoesDaSemanaRetrasada((erro, negociacoes) => {\n                    if(erro){\n                        this._mensagem.texto = erro;\n                        return;\n                    }\n        \n                    negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                    this._mensagem.texto = 'Negociações adicionadas com sucesso';\n                });\n            });\n        });\n        */\n    }\n\n    apaga() {\n\n        this._service\n            .apaga()\n            .then(mensagem => {\n                this._listaNegociacoes.esvazia();\n                this._mensagem.texto = mensagem;\n            })\n            .catch(erro => this._mensagem.texto = erro);\n    };\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n    }\n\n    ordena(coluna) {\n        if (this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem();\n        } else {\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n        }\n        this._ordemAtual = coluna;\n    }\n}\n"]}